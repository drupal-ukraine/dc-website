#!/usr/bin/env bash

#: exec_target = cli

## Initialize/reinstall site
##
## Usage: fin init-site

# Abort if anything fails
set -e

#-------------------------- Settings --------------------------------

# Console colors
red='\033[0;31m'
green='\033[0;32m'
green_bg='\033[42m'
yellow='\033[1;33m'
NC='\033[0m'

echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }

# PROJECT_ROOT and DOCROOT are set as env variables in cli
SITE_DIRECTORY="default"
DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
THEME_PATH="${DOCROOT_PATH}/themes/custom/dckyiv/"
SITEDIR_PATH="${DOCROOT_PATH}/sites/${SITE_DIRECTORY}"

#-------------------------- END: Settings --------------------------------

#-------------------------- Helper functions --------------------------------

# Copy a settings file.
# Skips if the destination file already exists.
# @param $1 source file
# @param $2 destination file
copy_settings_file()
{
	local source="$1"
	local dest="$2"

	if [[ ! -f $dest ]]; then
		echo -e "Copying ${dest}..."
		cp $source $dest
	else
		echo -e "${dest} - already in place."
		cp -f $source $dest
	fi
}

#-------------------------- END: Helper functions --------------------------------

#-------------------------- Functions --------------------------------

# Copy repo settings.php file into project
copy_settings ()
{
    echo -e "${green} Copying settings${NC}"
	copy_settings_file "${PROJECT_ROOT}/.docksal/settings/setting.stage_file_proxy.php" "${SITEDIR_PATH}/setting.stage_file_proxy.php"
	copy_settings_file "${PROJECT_ROOT}/.docksal/settings/settings.local.php" "${SITEDIR_PATH}/settings.local.php"
}

# Fix file/folder permissions
fix_permissions ()
{
	echo -e "${green} Making site directory writable...${NC}"
	chmod 755 "${SITEDIR_PATH}"
}

# Install site
site_install ()
{
    echo -e "${green} Installing site...${NC}"
	cd $DOCROOT_PATH
	# We disable email sending here so site-install does not return an error
	php -d sendmail_path=/bin/true /usr/local/bin/drush site-install -y --site-name='Drupal Camp Ukraine' --account-name='admin' --account-pass='admin'
}

# Installing composer
composer_install ()
{
    echo -e "${green} Installing composer...${NC}"
	cd $PROJECT_ROOT
	php -d memory_limit=-1 /usr/local/bin/composer update drupal/allowed_formats --no-ansi --no-dev --no-interaction --optimize-autoloader --no-progress --prefer-dist --ignore-platform-reqs
}

# Import configs and run update
import_configs ()
{
    echo -e "${green} Import configs and run updates...${NC}"
    cd $DOCROOT_PATH
    drush en stage_file_proxy -y
    drush cr
    drush updb -y
    drush cim -y
}

# Build theme
theme_install ()
{
    echo -e "${green} Building theme...${NC}"
    cd $THEME_PATH
	npm install
	npm run production
}

# Post install commands
post_install ()
{
    if [ "$1" == "new" ]; then
        echo -e "${yellow}http://${VIRTUAL_HOST}/user${NC}"
        echo -e "User:${green} admin ${NC}"
        echo -e "Pass:${green} admin ${NC}"
    else
        drush uli
    fi
}
#-------------------------- END: Functions --------------------------------


#-------------------------- Execution --------------------------------
fix_permissions
copy_settings
composer_install

if [ "$1" == "new" ]; then
    site_install
else
    import_configs
	theme_install
fi

#post_install
#-------------------------- END: Execution --------------------------------
